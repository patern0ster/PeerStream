[{"/Users/mete/Desktop/peer-stream/src/index.js":"1","/Users/mete/Desktop/peer-stream/src/reportWebVitals.js":"2","/Users/mete/Desktop/peer-stream/src/App.js":"3","/Users/mete/Desktop/peer-stream/src/components/Streams.js":"4","/Users/mete/Desktop/peer-stream/src/components/Home.js":"5","/Users/mete/Desktop/peer-stream/src/components/MintPage.js":"6","/Users/mete/Desktop/peer-stream/src/components/Header.js":"7","/Users/mete/Desktop/peer-stream/src/utils/lensApi.js":"8","/Users/mete/Desktop/peer-stream/src/utils/wallet.js":"9","/Users/mete/Desktop/peer-stream/src/utils/cacheAuth.js":"10","/Users/mete/Desktop/peer-stream/src/utils/apolloClient.js":"11","/Users/mete/Desktop/peer-stream/src/requests/authentication/createNonce.js":"12","/Users/mete/Desktop/peer-stream/src/requests/authentication/authorization.js":"13"},{"size":535,"mtime":1650655268619,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1650641958166,"results":"16","hashOfConfig":"15"},{"size":603,"mtime":1650706653599,"results":"17","hashOfConfig":"15"},{"size":134,"mtime":1650705302144,"results":"18","hashOfConfig":"15"},{"size":312,"mtime":1650703718860,"results":"19","hashOfConfig":"15"},{"size":2697,"mtime":1650726614781,"results":"20","hashOfConfig":"15"},{"size":1987,"mtime":1650731733312,"results":"21","hashOfConfig":"15"},{"size":1117,"mtime":1650716327802,"results":"22","hashOfConfig":"15"},{"size":2251,"mtime":1650731611825,"results":"23","hashOfConfig":"15"},{"size":1662,"mtime":1650725055970,"results":"24","hashOfConfig":"15"},{"size":861,"mtime":1650716327801,"results":"25","hashOfConfig":"15"},{"size":629,"mtime":1650732111074,"results":"26","hashOfConfig":"15"},{"size":629,"mtime":1650732096228,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1cgyqtj",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mete/Desktop/peer-stream/src/index.js",[],["59","60"],"/Users/mete/Desktop/peer-stream/src/reportWebVitals.js",[],"/Users/mete/Desktop/peer-stream/src/App.js",[],"/Users/mete/Desktop/peer-stream/src/components/Streams.js",[],"/Users/mete/Desktop/peer-stream/src/components/Home.js",["61","62","63"],"import React  from 'react';\nimport './Home.css'\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Home = (props) => {\n\n  return (\n    <div className=\"Home\">\n      <h1>\n        New decentralized platform for streamers!\n      </h1>\n    </div>\n  );\n};\n\nexport default Home;","/Users/mete/Desktop/peer-stream/src/components/MintPage.js",["64","65","66"],"import React  from 'react';\nimport './mint.css'\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ping,getUsersNfts} from \"../utils/lensApi\";\nimport { getCurrentWalletConnected} from \"../utils/wallet\";\n\nimport '../utils/lensApi.js';\nconst MintPage = (props) => {\n\n    const [pingStatus, setpingStatus] = useState(\"Waiting....\");\n\n    const [walletAddress, setWallet] = useState(\"\");\n    const contract = \"0x54439D4908A3E19356F876aa6022D67d0b3B12d6\";\n    const [nftList, setNnftList] = useState([]);\n    const [nftLenght, setNftLenght] = useState(0);\n\n    useEffect( () => {\n    getCurrentWalletConnected().then(res => setWallet(res.address));\n\n\n\n        ping().then(res => setpingStatus(res.data.ping==\"pong\"?\"True\":\"False\"));\n   \n        if(walletAddress){\n\n            getUsersNfts(walletAddress,contract,[80001]).then((res) =>{\n           if(res.data.nfts){\n            setNftLenght(res.data.nfts.length);\n            let tempItems= [];\n                \n            for(let i=1;i<=res.data.nfts.items.length;i++){\n           \n              tempItems.push(res.data.nfts.items[i]);\n              }\n          \n              setNnftList(tempItems);\n           }\n           else{\n            setNftLenght(0);\n           }\n    }\n   \n\n             );\n        }\n   \n      });\n\n\n  return (\n    <div>\n    <div className=\"MintPage\">\n      <h1>\n       LivePeer & Lenst Protocol NFT mint page\n      </h1>\n      \n      <div>\n          \n      <p>LensProtocol Connection: {pingStatus}</p>\n      <p> Number Of User's Nfts {nftLenght} </p>\n\n\n        <h4>  All NFT's</h4>\n        {nftList.map((object, i) => \n              <div>\n            <img src={object}/>\n            <p>NFT ID: #{i+1}</p>\n   \n\n             </div>   \n        )}\n\n     </div>\n\n        <div className='container'>\n      <div class=\"row row-cols-1 row-cols-md-3 mb-3 text-center\">\n      <div class=\"col\">\n        <div class=\"card mb-6 rounded- shadow-sm\">\n          \n          <div class=\"card-header py-3\">\n          <h2>Mint Video NFT</h2>\n        </div>\n          <div class=\"card-body\">\n          <div class=\"input-group\">\n            <input type=\"text\" className=\"form-control\" id=\"depositInput\" placeholder=\"Name\"/>\n           </div> \n          <div class=\"input-group\">\n            <input type=\"text\" className=\"form-control\" id=\"depositInput\" placeholder=\"IPFS link\"/>\n            </div> \n              <div class=\"input-group\">\n            <button type=\"submit\"   className=\"btn btn-primary\">Mint</button>\n          </div>      \n          </div>\n        </div>\n      </div>  \n      </div>\n        <div>\n\n    </div>\n\n    </div>\n      </div>\n      </div>\n    );\n};\n\n\nexport default MintPage;","/Users/mete/Desktop/peer-stream/src/components/Header.js",["67","68","69","70"],"import React  from 'react';\nimport '../App.css';\nimport { useEffect, useState } from \"react\";\nimport { connectWallet, getCurrentWalletConnected, authorizeWallet } from \"../utils/wallet.js\";\nimport { setAuthToCache } from '../utils/cacheAuth';\nconst Header = (props) => {\n\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"\");\n        }\n      });\n    } else {\n      setStatus(\n        \"Metamask is required\"\n      );\n    }\n  }  \n  useEffect(() => {\n    const wallet = async () => {\n      return await getCurrentWalletConnected();\n    }\n    const authorize = async () => {\n      const {token} = await authorizeWallet(address);\n      setAuthToCache(token);\n    }\n    const {address, status} = wallet();\n    setWallet(address);\n    setStatus(status);\n    authorize();\n    addWalletListener(); \n    console.log(walletAddress);\n  }, []);\n  \n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n\n  return (\n    <div className=\"Header\">\n      <nav>\n        <div className=\"left-side\">\n          <p>Logo</p>\n        </div>\n        <div className=\"right-side\">\n        <a href=\"/mint\">Mint Video NFT</a>\n        <a href=\"#\">Docs</a>\n        <a href=\"#\">About</a>\n        <p className='connect-wallet' onClick={connectWalletPressed}>\n        {walletAddress?.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>Connect Wallet</span>\n        )}</p>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;","/Users/mete/Desktop/peer-stream/src/utils/lensApi.js",["71","72"],"\nimport { apolloClient\n    \n} from './apolloClient';\nimport { gql } from '@apollo/client'\n\nimport { createClient } from 'urql'\n\nconst APIURL = 'https://api-mumbai.lens.dev/';\n\n\n   \n\nconst GET_PING = `\n  query {\n    ping\n  }\n`\n\nexport const ping = async() => {\n   return await apolloClient.query({\n    query: gql(GET_PING),\n  });\n}\n   \n\nconst GET_USERS_NFTS = `\n  query($request: NFTsRequest!) {\n    nfts(request: $request) {\n      items {\n        contractName\n        contractAddress\n        symbol\n        tokenId\n        owners {\n          amount\n          address\n        }\n        name\n        description\n        contentURI\n        originalContent {\n          uri\n          metaType\n        }\n        chainId\n        collectionName\n        ercType\n      }\n    pageInfo {\n        prev\n        next\n        totalCount\n    }\n  }\n}\n`\n\nexport const getUsersNfts = async(ownerAddress, contractAddress, chainIds) => {\n   return apolloClient.query({\n    query: gql(GET_USERS_NFTS),\n    variables: {\n      request: {\n        ownerAddress,\n        contractAddress,\n        chainIds,\n        limit: 10\n      }\n    },\n  })\n}","/Users/mete/Desktop/peer-stream/src/utils/wallet.js",[],"/Users/mete/Desktop/peer-stream/src/utils/cacheAuth.js",[],"/Users/mete/Desktop/peer-stream/src/utils/apolloClient.js",[],"/Users/mete/Desktop/peer-stream/src/requests/authentication/createNonce.js",["73"],"/Users/mete/Desktop/peer-stream/src/requests/authentication/authorization.js",["74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":19},{"ruleId":"79","severity":1,"message":"83","line":3,"column":21,"nodeType":"81","messageId":"82","endLine":3,"endColumn":29},{"ruleId":"79","severity":1,"message":"84","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"79","severity":1,"message":"84","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":24,"column":55,"nodeType":"87","messageId":"88","endLine":24,"endColumn":57},{"ruleId":"89","severity":1,"message":"90","line":68,"column":13,"nodeType":"91","endLine":68,"endColumn":32},{"ruleId":"79","severity":1,"message":"92","line":9,"column":10,"nodeType":"81","messageId":"82","endLine":9,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":42,"column":6,"nodeType":"95","endLine":42,"endColumn":8,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":59,"column":9,"nodeType":"91","endLine":59,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":60,"column":9,"nodeType":"91","endLine":60,"endColumn":21},{"ruleId":"79","severity":1,"message":"99","line":7,"column":10,"nodeType":"81","messageId":"82","endLine":7,"endColumn":22},{"ruleId":"79","severity":1,"message":"100","line":9,"column":7,"nodeType":"81","messageId":"82","endLine":9,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":19,"column":43,"nodeType":"87","messageId":"88","endLine":19,"endColumn":45},{"ruleId":"85","severity":1,"message":"86","line":18,"column":43,"nodeType":"87","messageId":"88","endLine":18,"endColumn":45},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'status' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'walletAddress'. Either include it or remove the dependency array.","ArrayExpression",["103"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'createClient' is defined but never used.","'APIURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [walletAddress]",{"range":"106","text":"107"},[1150,1152],"[walletAddress]"]