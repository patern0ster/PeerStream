[{"/Users/mete/Desktop/peer-stream/src/index.js":"1","/Users/mete/Desktop/peer-stream/src/reportWebVitals.js":"2","/Users/mete/Desktop/peer-stream/src/App.js":"3","/Users/mete/Desktop/peer-stream/src/components/Streams.js":"4","/Users/mete/Desktop/peer-stream/src/components/Home.js":"5","/Users/mete/Desktop/peer-stream/src/components/MintPage.js":"6","/Users/mete/Desktop/peer-stream/src/components/Header.js":"7","/Users/mete/Desktop/peer-stream/src/utils/lensApi.js":"8","/Users/mete/Desktop/peer-stream/src/utils/wallet.js":"9","/Users/mete/Desktop/peer-stream/src/utils/cacheAuth.js":"10","/Users/mete/Desktop/peer-stream/src/utils/apolloClient.js":"11","/Users/mete/Desktop/peer-stream/src/requests/authentication/createNonce.js":"12","/Users/mete/Desktop/peer-stream/src/requests/authentication/authorization.js":"13","/Users/mete/Desktop/peer-stream/src/requests/authentication/createStream.js":"14"},{"size":535,"mtime":1650655268619,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1650641958166,"results":"17","hashOfConfig":"16"},{"size":603,"mtime":1650706653599,"results":"18","hashOfConfig":"16"},{"size":134,"mtime":1650705302144,"results":"19","hashOfConfig":"16"},{"size":312,"mtime":1650703718860,"results":"20","hashOfConfig":"16"},{"size":2736,"mtime":1650732418869,"results":"21","hashOfConfig":"16"},{"size":2149,"mtime":1650737747654,"results":"22","hashOfConfig":"16"},{"size":1117,"mtime":1650716327802,"results":"23","hashOfConfig":"16"},{"size":2319,"mtime":1650736805569,"results":"24","hashOfConfig":"16"},{"size":1662,"mtime":1650725055970,"results":"25","hashOfConfig":"16"},{"size":861,"mtime":1650716327801,"results":"26","hashOfConfig":"16"},{"size":644,"mtime":1650737195428,"results":"27","hashOfConfig":"16"},{"size":630,"mtime":1650732753816,"results":"28","hashOfConfig":"16"},{"size":620,"mtime":1650710569287,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1cgyqtj",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mete/Desktop/peer-stream/src/index.js",[],["62","63"],"/Users/mete/Desktop/peer-stream/src/reportWebVitals.js",[],"/Users/mete/Desktop/peer-stream/src/App.js",[],"/Users/mete/Desktop/peer-stream/src/components/Streams.js",[],"/Users/mete/Desktop/peer-stream/src/components/Home.js",["64","65","66"],"import React  from 'react';\nimport './Home.css'\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Home = (props) => {\n\n  return (\n    <div className=\"Home\">\n      <h1>\n        New decentralized platform for streamers!\n      </h1>\n    </div>\n  );\n};\n\nexport default Home;","/Users/mete/Desktop/peer-stream/src/components/MintPage.js",["67","68","69"],"import React  from 'react';\nimport './mint.css'\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ping,getUsersNfts} from \"../utils/lensApi\";\nimport { getCurrentWalletConnected} from \"../utils/wallet\";\n\nimport '../utils/lensApi.js';\nconst MintPage = (props) => {\n\n    const [pingStatus, setpingStatus] = useState(\"Waiting....\");\n\n    const [walletAddress, setWallet] = useState(\"\");\n    const contract = \"0x54439D4908A3E19356F876aa6022D67d0b3B12d6\";\n    const [nftList, setNnftList] = useState([]);\n    const [nftLenght, setNftLenght] = useState(0);\n\n    useEffect( () => {\n    getCurrentWalletConnected().then(res => setWallet(res.address));\n\n\n\n        ping().then(res => setpingStatus(res.data.ping==\"pong\"?\"True\":\"False\"));\n   \n        if(walletAddress){\n\n            getUsersNfts(walletAddress,contract,[80001]).then((res) =>{\n           if(res.data.nfts){\n            setNftLenght(res.data.nfts.length);\n            let tempItems= [];\n                \n            for(let i=1;i<=res.data.nfts.items.length;i++){\n           \n              tempItems.push(res.data.nfts.items[i]);\n              }\n          \n              setNnftList(tempItems);\n           }\n           else{\n            setNftLenght(0);\n           }\n    }\n   \n\n             );\n        }\n   \n      });\n\n\n  return (\n    <div>\n    <div className=\"MintPage\">\n      <h1>\n       LivePeer & Lenst Protocol NFT mint page\n      </h1>\n      \n      <div>\n      <h2>\n       Lens Protocol Data:\n      </h2>\n      <p>LensProtocol Connection: {pingStatus}</p>\n      <p> Number Of User's Nfts {nftLenght} </p>\n\n\n        <h4>  All NFT's</h4>\n        {nftList.map((object, i) => \n              <div>\n            <img src={object}/>\n            <p>NFT ID: #{i+1}</p>\n   \n\n             </div>   \n        )}\n\n     </div>\n\n        <div className='container'>\n      <div class=\"row row-cols-1 row-cols-md-3 mb-3 text-center\">\n      <div class=\"col\">\n        <div class=\"card mb-6 rounded- shadow-sm\">\n          \n          <div class=\"card-header py-3\">\n          <h2>Mint Video NFT</h2>\n        </div>\n          <div class=\"card-body\">\n          <div class=\"input-group\">\n            <input type=\"text\" className=\"form-control\" id=\"depositInput\" placeholder=\"Name\"/>\n           </div> \n          <div class=\"input-group\">\n            <input type=\"text\" className=\"form-control\" id=\"depositInput\" placeholder=\"IPFS link\"/>\n            </div> \n              <div class=\"input-group\">\n            <button type=\"submit\"   className=\"btn btn-primary\">Mint</button>\n          </div>      \n          </div>\n        </div>\n      </div>  \n      </div>\n        <div>\n\n    </div>\n\n    </div>\n      </div>\n      </div>\n    );\n};\n\n\nexport default MintPage;","/Users/mete/Desktop/peer-stream/src/components/Header.js",["70","71","72","73","74"],"/Users/mete/Desktop/peer-stream/src/utils/lensApi.js",["75","76"],"\nimport { apolloClient\n    \n} from './apolloClient';\nimport { gql } from '@apollo/client'\n\nimport { createClient } from 'urql'\n\nconst APIURL = 'https://api-mumbai.lens.dev/';\n\n\n   \n\nconst GET_PING = `\n  query {\n    ping\n  }\n`\n\nexport const ping = async() => {\n   return await apolloClient.query({\n    query: gql(GET_PING),\n  });\n}\n   \n\nconst GET_USERS_NFTS = `\n  query($request: NFTsRequest!) {\n    nfts(request: $request) {\n      items {\n        contractName\n        contractAddress\n        symbol\n        tokenId\n        owners {\n          amount\n          address\n        }\n        name\n        description\n        contentURI\n        originalContent {\n          uri\n          metaType\n        }\n        chainId\n        collectionName\n        ercType\n      }\n    pageInfo {\n        prev\n        next\n        totalCount\n    }\n  }\n}\n`\n\nexport const getUsersNfts = async(ownerAddress, contractAddress, chainIds) => {\n   return apolloClient.query({\n    query: gql(GET_USERS_NFTS),\n    variables: {\n      request: {\n        ownerAddress,\n        contractAddress,\n        chainIds,\n        limit: 10\n      }\n    },\n  })\n}","/Users/mete/Desktop/peer-stream/src/utils/wallet.js",[],"/Users/mete/Desktop/peer-stream/src/utils/cacheAuth.js",[],"/Users/mete/Desktop/peer-stream/src/utils/apolloClient.js",[],"/Users/mete/Desktop/peer-stream/src/requests/authentication/createNonce.js",[],"/Users/mete/Desktop/peer-stream/src/requests/authentication/authorization.js",[],"/Users/mete/Desktop/peer-stream/src/requests/authentication/createStream.js",["77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":10,"nodeType":"84","messageId":"85","endLine":3,"endColumn":19},{"ruleId":"82","severity":1,"message":"86","line":3,"column":21,"nodeType":"84","messageId":"85","endLine":3,"endColumn":29},{"ruleId":"82","severity":1,"message":"87","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":14},{"ruleId":"82","severity":1,"message":"87","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":24,"column":55,"nodeType":"90","messageId":"91","endLine":24,"endColumn":57},{"ruleId":"92","severity":1,"message":"93","line":70,"column":13,"nodeType":"94","endLine":70,"endColumn":32},{"ruleId":"82","severity":1,"message":"95","line":9,"column":10,"nodeType":"84","messageId":"85","endLine":9,"endColumn":16},{"ruleId":"82","severity":1,"message":"96","line":32,"column":11,"nodeType":"84","messageId":"85","endLine":32,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":43,"column":6,"nodeType":"99","endLine":43,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":63,"column":9,"nodeType":"94","endLine":63,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":64,"column":9,"nodeType":"94","endLine":64,"endColumn":21},{"ruleId":"82","severity":1,"message":"103","line":7,"column":10,"nodeType":"84","messageId":"85","endLine":7,"endColumn":22},{"ruleId":"82","severity":1,"message":"104","line":9,"column":7,"nodeType":"84","messageId":"85","endLine":9,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":18,"column":43,"nodeType":"90","messageId":"91","endLine":18,"endColumn":45},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'status' is assigned a value but never used.","'authorize' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'walletAddress'. Either include it or remove the dependency array.","ArrayExpression",["107"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'createClient' is defined but never used.","'APIURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [walletAddress]",{"range":"110","text":"111"},[1185,1187],"[walletAddress]"]