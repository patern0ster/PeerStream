[{"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/index.js":"1","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/App.js":"2","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/reportWebVitals.js":"3","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/MintPage.js":"4","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Home.js":"5","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Streams.js":"6","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Header.js":"7","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/lensApi.js":"8","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/wallet.js":"9","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/apolloClient.js":"10","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/requests/authentication/createNonce.js":"11","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/requests/authentication/authorization.js":"12","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/requests/authentication/createStream.js":"13"},{"size":535,"mtime":1650687215120,"results":"14","hashOfConfig":"15"},{"size":603,"mtime":1650706575922,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1650687215121,"results":"17","hashOfConfig":"15"},{"size":2762,"mtime":1650733846093,"results":"18","hashOfConfig":"15"},{"size":312,"mtime":1650706428282,"results":"19","hashOfConfig":"15"},{"size":134,"mtime":1650706428282,"results":"20","hashOfConfig":"15"},{"size":1775,"mtime":1650726496992,"results":"21","hashOfConfig":"15"},{"size":1117,"mtime":1650711701404,"results":"22","hashOfConfig":"15"},{"size":2347,"mtime":1650726598258,"results":"23","hashOfConfig":"15"},{"size":861,"mtime":1650711372030,"results":"24","hashOfConfig":"15"},{"size":585,"mtime":1650716233420,"results":"25","hashOfConfig":"15"},{"size":629,"mtime":1650716233419,"results":"26","hashOfConfig":"15"},{"size":620,"mtime":1650716233420,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"waeahc",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/index.js",[],["63","64"],"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/App.js",[],"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/reportWebVitals.js",[],"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/MintPage.js",["65","66","67"],"import React  from 'react';\nimport './mint.css'\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ping,getUsersNfts} from \"../utils/lensApi\";\nimport { getCurrentWalletConnected} from \"../utils/wallet\";\n\nimport '../utils/lensApi.js';\nconst MintPage = (props) => {\n\n    const [pingStatus, setpingStatus] = useState(\"Waiting....\");\n\n    const [walletAddress, setWallet] = useState(\"\");\n    const contract = \"0xA4E1d8FE768d471B048F9d73ff90ED8fcCC03643\";\n    const [nftList, setNnftList] = useState([]);\n    const [nftLenght, setNftLenght] = useState(0);\n\n    useEffect( () => {\n    getCurrentWalletConnected().then(res => setWallet(res.address));\n\n\n\n        ping().then(res => setpingStatus(res.data.ping==\"pong\"?\"True\":\"False\"));\n   \n        if(walletAddress){\n\n            getUsersNfts(walletAddress,contract,[80001]).then((res) =>{\n              console.log(res.data);\n           if(res.data.nfts){\n            setNftLenght(res.data.nfts.length);\n            let tempItems= [];\n                \n            for(let i=1;i<=res.data.nfts.items.length;i++){\n           \n              tempItems.push(res.data.nfts.items[i]);\n              }\n              setNnftList(tempItems);\n           }\n           else{\n            setNftLenght(0);\n           }\n    }\n   \n\n             );\n        }\n   \n      });\n\n\n  return (\n    <div>\n    <div className=\"MintPage\">\n      <h1>\n       LivePeer & Lenst Protocol NFT mint page\n      </h1>\n      \n      <div>\n      <h2>\n       Lens Protocol Data:\n      </h2>\n      <p>LensProtocol Connection: {pingStatus}</p>\n      <p> Number Of User's Nfts {nftLenght} </p>\n\n\n        <h4>  All NFT's</h4>\n        {nftList.map((object, i) => \n              <div>\n            <img src={object}/>\n            <p>NFT ID: #{i+1}</p>\n   \n\n             </div>   \n        )}\n\n     </div>\n\n        <div className='container'>\n      <div class=\"row row-cols-1 row-cols-md-3 mb-3 text-center\">\n      <div class=\"col\">\n        <div class=\"card mb-6 rounded- shadow-sm\">\n          \n          <div class=\"card-header py-3\">\n          <h2>Mint Video NFT</h2>\n        </div>\n          <div class=\"card-body\">\n          <div class=\"input-group\">\n            <input type=\"text\" className=\"form-control\" id=\"depositInput\" placeholder=\"Name\"/>\n           </div> \n          <div class=\"input-group\">\n            <input type=\"text\" className=\"form-control\" id=\"depositInput\" placeholder=\"IPFS link\"/>\n            </div> \n              <div class=\"input-group\">\n            <button type=\"submit\"   className=\"btn btn-primary\">Mint</button>\n          </div>      \n          </div>\n        </div>\n      </div>  \n      </div>\n        <div>\n\n    </div>\n\n    </div>\n      </div>\n      </div>\n    );\n};\n\n\nexport default MintPage;","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Home.js",["68","69","70"],"import React  from 'react';\nimport './Home.css'\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Home = (props) => {\n\n  return (\n    <div className=\"Home\">\n      <h1>\n        New decentralized platform for streamers!\n      </h1>\n    </div>\n  );\n};\n\nexport default Home;","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Streams.js",[],"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Header.js",["71","72","73","74"],"import React  from 'react';\nimport '../App.css';\nimport { useEffect, useState } from \"react\";\nimport { connectWallet, getCurrentWalletConnected } from \"../utils/wallet.js\";\nconst Header = (props) => {\n\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"\");\n        }\n      });\n    } else {\n      setStatus(\n        \"Metamask is required\"\n      );\n    }\n  }  \n  useEffect(() => {\n    const wallet = async () => {\n      return await getCurrentWalletConnected();\n    }\n    const {address, status} = wallet();\n    setWallet(address);\n    setStatus(status);\n    addWalletListener(); \n    console.log(walletAddress);\n  }, []);\n  \n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n\n  return (\n    <div className=\"Header\">\n      <nav>\n        <div className=\"left-side\">\n          <p>Logo</p>\n        </div>\n        <div className=\"right-side\">\n        <a href=\"/mint\">Mint Video NFT</a>\n        <a href=\"#\">Docs</a>\n        <a href=\"#\">About</a>\n        <p className='connect-wallet' onClick={connectWalletPressed}>\n        {walletAddress?.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>Connect Wallet</span>\n        )}</p>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/lensApi.js",["75","76"],"\nimport { apolloClient\n    \n} from './apolloClient';\nimport { gql } from '@apollo/client'\n\nimport { createClient } from 'urql'\n\nconst APIURL = 'https://api-mumbai.lens.dev/';\n\n\n   \n\nconst GET_PING = `\n  query {\n    ping\n  }\n`\n\nexport const ping = async() => {\n   return await apolloClient.query({\n    query: gql(GET_PING),\n  });\n}\n   \n\nconst GET_USERS_NFTS = `\n  query($request: NFTsRequest!) {\n    nfts(request: $request) {\n      items {\n        contractName\n        contractAddress\n        symbol\n        tokenId\n        owners {\n          amount\n          address\n        }\n        name\n        description\n        contentURI\n        originalContent {\n          uri\n          metaType\n        }\n        chainId\n        collectionName\n        ercType\n      }\n    pageInfo {\n        prev\n        next\n        totalCount\n    }\n  }\n}\n`\n\nexport const getUsersNfts = async(ownerAddress, contractAddress, chainIds) => {\n   return apolloClient.query({\n    query: gql(GET_USERS_NFTS),\n    variables: {\n      request: {\n        ownerAddress,\n        contractAddress,\n        chainIds,\n        limit: 10\n      }\n    },\n  })\n}","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/wallet.js",["77","78"],"import React  from 'react';\nimport { ethers } from 'ethers';\nimport authorization from '../requests/authentication/authorization';\nimport createNonce from '../requests/authentication/createNonce';\nimport createStream from '../requests/authentication/createStream';\n\nrequire('dotenv').config();\n\nexport const authorizeWallet = async (address) => {\n  if(window.ethereum){\n    try{\n      const nonce = createNonce(address);\n      const { message_to_sign } = nonce;\n      await window.ethereum.send('eth_requestAccounts');\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner()\n      const signature = await signer.signMessage(message_to_sign);\n      const token = await authorization(address, signature);\n      return {\n        token,\n        status: 'Authentication successful'\n      };\n    } catch(err){\n      return {\n        token: '',\n        status: 'Authentication error: ' + err\n      }\n    }\n  } else {\n      return {\n        token: '',\n        status: \"Metamask is required\"\n      };\n    }\n}\n\nexport const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const obj = {\n          status: \"eth_requestAccounts\",\n          address: addressArray[0],\n        };\n        return obj;\n      } catch (err) {\n        return {\n          address: \"\",\n          status: \"Wallet Error: \" + err.message,\n        };\n      }\n    } else {\n      return {\n        address: \"\",\n        status: \"Metamask is required\"\n      };\n    }\n  };\n\n  export const getCurrentWalletConnected = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_accounts\",\n        });\n        if (addressArray.length > 0) {\n          return {\n            address: addressArray[0],\n            status: \"eth_requestAccounts\",\n          };\n        } else {\n          return {\n            address: \"\",\n            status: \"Metamask Connect\",\n          };\n        }\n      } catch (err) {\n        return {\n          address: \"\",\n          status: \"Wallet error:\" + err.message,\n        };\n      }\n    } else {\n      return {\n        address: \"\",\n      status: \"Metamask is required\",\n      };\n    }\n  };\n\n  ","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/apolloClient.js",[],"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/requests/authentication/createNonce.js",["79"],"const request = require('request');\n\nconst createNonce = async (address) => {\n    const headers = {\n        'content-type': 'application/json'\n    };\n\n    const dataString = `{\"address\": \"${address}\"}`;\n\n    const options = {\n        url: 'https://ethamsterdam.herokuapp.com/auth/nonce',\n        method: 'POST',\n        headers: headers,\n        body: dataString\n    };\n\n    function callback(error, response, body) {\n        if (!error && response.statusCode == 200) {\n            return response;\n        }\n    }\n\n    return request(options, callback);\n}\n\nexport default createNonce;","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/requests/authentication/authorization.js",["80"],"const request = require('request');\n\nconst authorization = async (address, signature) => {\n    const headers = {\n        'content-type': 'application/json'\n    };\n\n    const dataString = `{\"address\": \"${address}\", \"signature\": \"${signature}\"}`;\n\n    const options = {\n        url: 'https://ethamsterdam.herokuapp.com/auth/token',\n        method: 'POST',\n        headers: headers,\n        body: dataString\n    };\n\n    function callback(error, response, body) {\n        if (!error && response.statusCode == 200) {\n            return response;\n        }\n    }\n\n    return request(options, callback);\n}\n\nexport default authorization;","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/requests/authentication/createStream.js",["81"],"import request from 'request';\n\nconst createStream = async (title, description) => {\n    const headers = {\n        'content-type': 'application/json'\n    };\n\n    const dataString = `{\"title\": \"${title}\", \"description\": \"${description}\"}`;\n\n    const options = {\n        url: 'https://ethamsterdam.herokuapp.com/streams/',\n        method: 'POST',\n        headers: headers,\n        body: dataString\n    };\n\n    function callback(error, response, body) {\n        if (!error && response.statusCode == 200) {\n            return response;\n        }\n    }\n\n    return request(options, callback);\n}\n\nexport default createStream;",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":24,"column":55,"nodeType":"92","messageId":"93","endLine":24,"endColumn":57},{"ruleId":"94","severity":1,"message":"95","line":70,"column":13,"nodeType":"96","endLine":70,"endColumn":32},{"ruleId":"86","severity":1,"message":"97","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":19},{"ruleId":"86","severity":1,"message":"98","line":3,"column":21,"nodeType":"88","messageId":"89","endLine":3,"endColumn":29},{"ruleId":"86","severity":1,"message":"87","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":14},{"ruleId":"86","severity":1,"message":"99","line":8,"column":10,"nodeType":"88","messageId":"89","endLine":8,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":36,"column":6,"nodeType":"102","endLine":36,"endColumn":8,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":53,"column":9,"nodeType":"96","endLine":53,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":54,"column":9,"nodeType":"96","endLine":54,"endColumn":21},{"ruleId":"86","severity":1,"message":"106","line":7,"column":10,"nodeType":"88","messageId":"89","endLine":7,"endColumn":22},{"ruleId":"86","severity":1,"message":"107","line":9,"column":7,"nodeType":"88","messageId":"89","endLine":9,"endColumn":13},{"ruleId":"86","severity":1,"message":"108","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"109","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":18,"column":43,"nodeType":"92","messageId":"93","endLine":18,"endColumn":45},{"ruleId":"90","severity":1,"message":"91","line":18,"column":43,"nodeType":"92","messageId":"93","endLine":18,"endColumn":45},{"ruleId":"90","severity":1,"message":"91","line":18,"column":43,"nodeType":"92","messageId":"93","endLine":18,"endColumn":45},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","'status' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'walletAddress'. Either include it or remove the dependency array.","ArrayExpression",["112"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'createClient' is defined but never used.","'APIURL' is assigned a value but never used.","'React' is defined but never used.","'createStream' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [walletAddress]",{"range":"115","text":"116"},[938,940],"[walletAddress]"]