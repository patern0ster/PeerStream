[{"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/index.js":"1","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/reportWebVitals.js":"2","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/App.js":"3","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Header.js":"4","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Streams.js":"5","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Home.js":"6","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/MintPage.js":"7","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/wallet.js":"8","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/lensApi.js":"9","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/apolloClient.js":"10"},{"size":535,"mtime":1650687215120,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1650687215121,"results":"13","hashOfConfig":"12"},{"size":603,"mtime":1650706575922,"results":"14","hashOfConfig":"12"},{"size":1774,"mtime":1650706606431,"results":"15","hashOfConfig":"12"},{"size":134,"mtime":1650706428282,"results":"16","hashOfConfig":"12"},{"size":312,"mtime":1650706428282,"results":"17","hashOfConfig":"12"},{"size":1797,"mtime":1650719786692,"results":"18","hashOfConfig":"12"},{"size":1382,"mtime":1650697462528,"results":"19","hashOfConfig":"12"},{"size":1117,"mtime":1650711701404,"results":"20","hashOfConfig":"12"},{"size":861,"mtime":1650711372030,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"waeahc",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/index.js",[],["47","48"],"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/reportWebVitals.js",[],"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/App.js",[],"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Header.js",["49","50","51","52"],"import React  from 'react';\nimport '../App.css';\nimport { useEffect, useState } from \"react\";\nimport { connectWallet, getCurrentWalletConnected} from \"../utils/wallet.js\";\nconst Header = (props) => {\n\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"\");\n        }\n      });\n    } else {\n      setStatus(\n        \"Metamask is required\"\n      );\n    }\n  }  \n  useEffect(() => {\n    const wallet = async () => {\n      return await getCurrentWalletConnected();\n    }\n    const {address, status} = wallet();\n    setWallet(address);\n    setStatus(status);\n    addWalletListener(); \n    console.log(walletAddress);\n  }, []);\n  \n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n\n  return (\n    <div className=\"Header\">\n      <nav>\n        <div className=\"left-side\">\n          <p>Logo</p>\n        </div>\n        <div className=\"right-side\">\n        <a href=\"/mint\">Mint Video NFT</a>\n        <a href=\"#\">Docs</a>\n        <a href=\"#\">About</a>\n        <p className='connect-wallet' onClick={connectWalletPressed}>\n        {walletAddress?.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>Connect Wallet</span>\n        )}</p>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Streams.js",[],"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/Home.js",["53","54","55"],"import React  from 'react';\nimport './Home.css'\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Home = (props) => {\n\n  return (\n    <div className=\"Home\">\n      <h1>\n        New decentralized platform for streamers!\n      </h1>\n    </div>\n  );\n};\n\nexport default Home;","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/components/MintPage.js",["56","57","58"],"/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/wallet.js",["59","60"],"import React  from 'react';\n\nrequire('dotenv').config();\n\nconst  Web3  =  require('web3');\n\n\n  \n\nexport const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const obj = {\n          status: \"eth_requestAccounts\",\n          address: addressArray[0],\n        };\n        return obj;\n      } catch (err) {\n        return {\n          address: \"\",\n          status: \"Wallet Error: \" + err.message,\n        };\n      }\n    } else {\n      return {\n        address: \"\",\n        status: \"Metamask is required\"\n      };\n    }\n  };\n\n  export const getCurrentWalletConnected = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_accounts\",\n        });\n        if (addressArray.length > 0) {\n          return {\n            address: addressArray[0],\n            status: \"eth_requestAccounts\",\n          };\n        } else {\n          return {\n            address: \"\",\n            status: \"Metamask Connect\",\n          };\n        }\n      } catch (err) {\n        return {\n          address: \"\",\n          status: \"Wallet error:\" + err.message,\n        };\n      }\n    } else {\n      return {\n        address: \"\",\n      status: \"Metamask is required\",\n      };\n    }\n  };\n\n  ","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/lensApi.js",["61","62"],"\nimport { apolloClient\n    \n} from './apolloClient';\nimport { gql } from '@apollo/client'\n\nimport { createClient } from 'urql'\n\nconst APIURL = 'https://api-mumbai.lens.dev/';\n\n\n   \n\nconst GET_PING = `\n  query {\n    ping\n  }\n`\n\nexport const ping = async() => {\n   return await apolloClient.query({\n    query: gql(GET_PING),\n  });\n}\n   \n\nconst GET_USERS_NFTS = `\n  query($request: NFTsRequest!) {\n    nfts(request: $request) {\n      items {\n        contractName\n        contractAddress\n        symbol\n        tokenId\n        owners {\n          amount\n          address\n        }\n        name\n        description\n        contentURI\n        originalContent {\n          uri\n          metaType\n        }\n        chainId\n        collectionName\n        ercType\n      }\n    pageInfo {\n        prev\n        next\n        totalCount\n    }\n  }\n}\n`\n\nexport const getUsersNfts = async(ownerAddress, contractAddress, chainIds) => {\n   return apolloClient.query({\n    query: gql(GET_USERS_NFTS),\n    variables: {\n      request: {\n        ownerAddress,\n        contractAddress,\n        chainIds,\n        limit: 10\n      }\n    },\n  })\n}","/Users/izzetemredemir/Documents/amsterdam/ui/PeerStream/src/utils/apolloClient.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":8,"column":10,"nodeType":"69","messageId":"70","endLine":8,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":36,"column":6,"nodeType":"73","endLine":36,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":53,"column":9,"nodeType":"77","endLine":53,"endColumn":21},{"ruleId":"75","severity":1,"message":"76","line":54,"column":9,"nodeType":"77","endLine":54,"endColumn":21},{"ruleId":"67","severity":1,"message":"78","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":19},{"ruleId":"67","severity":1,"message":"79","line":3,"column":21,"nodeType":"69","messageId":"70","endLine":3,"endColumn":29},{"ruleId":"67","severity":1,"message":"80","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"67","severity":1,"message":"80","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":24,"column":55,"nodeType":"83","messageId":"84","endLine":24,"endColumn":57},{"ruleId":"85","severity":1,"message":"86","line":65,"column":13,"nodeType":"77","endLine":65,"endColumn":32},{"ruleId":"67","severity":1,"message":"87","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"88","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":12},{"ruleId":"67","severity":1,"message":"89","line":7,"column":10,"nodeType":"69","messageId":"70","endLine":7,"endColumn":22},{"ruleId":"67","severity":1,"message":"90","line":9,"column":7,"nodeType":"69","messageId":"70","endLine":9,"endColumn":13},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'status' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'walletAddress'. Either include it or remove the dependency array.","ArrayExpression",["93"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'React' is defined but never used.","'Web3' is assigned a value but never used.","'createClient' is defined but never used.","'APIURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [walletAddress]",{"range":"96","text":"97"},[937,939],"[walletAddress]"]